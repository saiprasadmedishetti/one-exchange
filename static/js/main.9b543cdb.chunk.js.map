{"version":3,"sources":["components/Trade.jsx","App.js","index.js"],"names":["socket","WebSocket","sub","channels","product_ids","type","unsub","Trade","useState","trades","setTrades","socketData","setSocketData","prev","setPrev","useEffect","fetch","then","res","json","data","onopen","e","send","JSON","stringify","onmessage","parse","className","style","color","price","Number","toLocaleString","low_24h","last_size","open_24h","length","map","trade","side","trade_id","toFixed","size","Date","time","toLocaleDateString","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAIMA,EAAS,IAAIC,UADA,kCAEbC,EAAM,CACVC,SAAU,CAAC,UACXC,YAAa,CAAC,WACdC,KAAM,aAEFC,EAAQ,CACZH,SAAU,CAAC,UACXC,YAAa,CAAC,WACdC,KAAM,eA2HOE,MAxHf,WAAkB,IAAD,EACaC,mBAAS,IADtB,mBACRC,EADQ,KACAC,EADA,OAEqBF,mBAAS,MAF9B,mBAERG,EAFQ,KAEIC,EAFJ,OAGSJ,mBAAS,IAHlB,mBAGRK,EAHQ,KAGFC,EAHE,KAmCf,OA9BAC,qBAAU,WAIR,OAHAC,MApBY,wDAqBTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUV,EAAUU,MACrB,WACLV,EAAU,OAEX,IAEHK,qBAAU,WAgBR,OAfAf,EAAOqB,OAAS,SAACC,GACftB,EAAOuB,KAAKC,KAAKC,UAAUvB,KAE7BF,EAAO0B,UAAY,SAACJ,GAClB,IAAMF,EAAOI,KAAKG,MAAML,EAAEF,MACR,WAAdA,EAAKf,MACPO,GAAc,SAACC,GAIb,OAHIA,GACFC,EAAQD,GAEHO,MAKN,WACLpB,EAAOuB,KAAKC,KAAKC,UAAUnB,OAE5B,IAGD,qCACE,qBAAKsB,UAAU,SAAf,SACGjB,GACC,qCACE,qBACEiB,UAAU,QACVC,MAAO,CACLC,MACEjB,EAAKkB,MAAQpB,EAAWoB,MACpB,YACA,kBANV,eASKC,OAAOrB,EAAWoB,OAAOE,oBAE9B,sBAAKL,UAAU,QAAf,qBAEE,uBACEC,MAAO,CACLC,MACEjB,EAAKqB,QAAUvB,EAAWuB,QACtB,YACA,kBALV,eAQKvB,EAAWuB,cAGlB,sBAAKN,UAAU,QAAf,mBAEE,sBACEC,MAAO,CACLC,MACEjB,EAAKsB,UAAYxB,EAAWwB,UACxB,YACA,kBALV,SAQGxB,EAAWwB,eAGhB,sBAAKP,UAAU,QAAf,sBAEE,sCAASjB,EAAWyB,oBAK5B,qBAAKR,UAAU,SAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,0CAEA,uCACA,sCACA,2CAGJ,gCACGnB,GACCA,EAAO4B,OAAS,GAChB5B,EAAO6B,KAAI,SAACC,GAAD,OACT,qBAEEV,MAAO,CACLC,MACiB,SAAfS,EAAMC,KAAkB,YAAc,kBAJ5C,UAOE,6BAAKD,EAAME,WAEX,oCAAOT,OAAOO,EAAMR,OAAOW,QAAQ,GAAGT,oBACtC,6BAAKM,EAAMI,OACX,6BAAK,IAAIC,KAAKL,EAAMM,MAAMC,yBAVrBP,EAAME,wBC1GdM,MARf,WACE,OACE,qBAAKnB,UAAU,YAAf,SACE,cAAC,EAAD,OCANoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9b543cdb.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst API_URL = \"https://api.pro.coinbase.com/products/BTC-USD/trades\";\nconst SOCKET_URL = \"wss://ws-feed.pro.coinbase.com\";\nconst socket = new WebSocket(SOCKET_URL);\nconst sub = {\n  channels: [\"ticker\"],\n  product_ids: [\"BTC-USD\"],\n  type: \"subscribe\",\n};\nconst unsub = {\n  channels: [\"ticker\"],\n  product_ids: [\"BTC-USD\"],\n  type: \"unsubscribe\",\n};\n\nfunction Trade() {\n  const [trades, setTrades] = useState([]);\n  const [socketData, setSocketData] = useState(null);\n  const [prev, setPrev] = useState({});\n\n  useEffect(() => {\n    fetch(API_URL)\n      .then((res) => res.json())\n      .then((data) => setTrades(data));\n    return () => {\n      setTrades([]);\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.onopen = (e) => {\n      socket.send(JSON.stringify(sub));\n    };\n    socket.onmessage = (e) => {\n      const data = JSON.parse(e.data);\n      if (data.type === \"ticker\") {\n        setSocketData((prev) => {\n          if (prev) {\n            setPrev(prev);\n          }\n          return data;\n        });\n        // console.log(data);\n      }\n    };\n    return () => {\n      socket.send(JSON.stringify(unsub));\n    };\n  }, []);\n\n  return (\n    <>\n      <div className=\"stream\">\n        {socketData && (\n          <>\n            <h1\n              className=\"price\"\n              style={{\n                color:\n                  prev.price > socketData.price\n                    ? \"indianred\"\n                    : \"mediumseagreen\",\n              }}\n            >\n              $ {Number(socketData.price).toLocaleString()}\n            </h1>\n            <div className=\"badge\">\n              Low 24hr\n              <span\n                style={{\n                  color:\n                    prev.low_24h > socketData.low_24h\n                      ? \"indianred\"\n                      : \"mediumseagreen\",\n                }}\n              >\n                $ {socketData.low_24h}\n              </span>\n            </div>\n            <div className=\"badge\">\n              Volume\n              <span\n                style={{\n                  color:\n                    prev.last_size > socketData.last_size\n                      ? \"indianred\"\n                      : \"mediumseagreen\",\n                }}\n              >\n                {socketData.last_size}\n              </span>\n            </div>\n            <div className=\"badge\">\n              Open 24hr\n              <span>$ {socketData.open_24h}</span>\n            </div>\n          </>\n        )}\n      </div>\n      <div className=\"scroll\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Trade ID</th>\n              {/* <th>Side</th> */}\n              <th>Price</th>\n              <th>Size</th>\n              <th>Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            {trades &&\n              trades.length > 0 &&\n              trades.map((trade) => (\n                <tr\n                  key={trade.trade_id}\n                  style={{\n                    color:\n                      trade.side === \"sell\" ? \"indianred\" : \"mediumseagreen\",\n                  }}\n                >\n                  <td>{trade.trade_id}</td>\n                  {/* <td>{trade.side}</td> */}\n                  <td>$ {Number(trade.price).toFixed(3).toLocaleString()}</td>\n                  <td>{trade.size}</td>\n                  <td>{new Date(trade.time).toLocaleDateString()}</td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default Trade;\n","import Trade from \"./components/Trade\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Trade />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}